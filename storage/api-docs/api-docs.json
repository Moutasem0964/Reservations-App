{
    "openapi": "3.0.0",
    "info": {
        "title": "Reservation test",
        "description": "This is the API documentation for my Laravel application",
        "contact": {
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/accept/manager/invite/{token}": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Accept manager invitation",
                "operationId": "9d26ba0f86eec9268a15de0fc38f89a4",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Invitation token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "abc123token"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AcceptInviteRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Manager registered and verification code sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registered successfully. A verification code was sent to your phone number. Please verify your account"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or used invitation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid or expired invitation."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new admin (Requires Super Admin privileges)",
                "operationId": "2c329a088f4fdd0b805e14bb6959831b",
                "requestBody": {
                    "description": "Admin registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientRegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Admin registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful. Please Verify!"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - Missing or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Requires Super Admin privileges",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Super Admin token required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/client/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a client",
                "operationId": "77c1936c8540cea8cf792a7a4c9ce4e6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientRegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful Please Verify!"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/employee/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new employee (Requires Manager privileges)",
                "operationId": "a20c84e125a22f281a6acf5a0e7acc89",
                "requestBody": {
                    "description": "Employee registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ClientRegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful. Please Verify!"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated - Missing or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Requires Manager privileges",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized - Manager token required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/forgot/password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset verification code to the user's phone",
                "operationId": "c41024bdbe76440768e3b4fa709ea24a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone_number"
                                ],
                                "properties": {
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+963944000000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification code sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification Code has been sent to your phone number. Please verify !"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Could not process password reset"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user with phone number and password",
                "description": "Logs in a user and returns an access token. Note: Account must be verified first.",
                "operationId": "909448bbbbc7aa7e91c81547bc0bbd56",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Authentication successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "token": {
                                            "description": "Bearer token for authenticated requests",
                                            "type": "string",
                                            "example": "1|XNBb3Jz5Zk9L2wq1pOoPpQaRsTtUuVv"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid phone number or password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Account not verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/manager/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new manager and their place. Note!: Both the Manager and the Place accounts will be inactive till verification",
                "operationId": "8c6f7f2433051a6f426c76a9441265ed",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/ClientRegisterRequest"
                                    },
                                    {
                                        "$ref": "#/components/schemas/PlaceRegisterRequest"
                                    }
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Manager and Place registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful Please Verify!"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "place": {
                                            "$ref": "#/components/schemas/Place"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/reset/password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password using phone number and reset token",
                "operationId": "42b7299563703b51b00e934698fc71c4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successful. Please login."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired reset token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired reset token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/request/new/verification/code": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request a new phone verification code if the account is not verified",
                "operationId": "43f9747729851b54306e5e097b7b52cd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone_number"
                                ],
                                "properties": {
                                    "phone_number": {
                                        "type": "string",
                                        "example": "+963944000000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New verification code sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A new verification code has been sent. Please verify within 1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Account already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account already verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify user via phone number and code and generate reset token if needed",
                "operationId": "c46372099d13e82f3933b68447d917cb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful verification. Note!! : if the Verification code was sent for resetting the password the response will include a reset token.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Verification successful. Please Login!"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Verification successful. Please reset the password"
                                                },
                                                "reset_token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAi..."
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-04-21T13:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                },
                                "example": [
                                    {
                                        "message": "Verification successful. Please Login!"
                                    },
                                    {
                                        "message": "Verification successful. Please reset the password",
                                        "reset_token": "eyJ0eXAi...",
                                        "expires_at": "2025-04-21T13:00:00Z"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired verification code",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired verification code"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AcceptInviteRequest": {
                "required": [
                    "first_name",
                    "last_name",
                    "phone_number",
                    "password",
                    "password_confirmation",
                    "first_name_ar",
                    "last_name_ar"
                ],
                "properties": {
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "first_name_ar": {
                        "type": "string",
                        "example": "جون"
                    },
                    "last_name_ar": {
                        "type": "string",
                        "example": "دو"
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "+963944000000"
                    },
                    "password": {
                        "type": "string",
                        "example": "password123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "example": "password123"
                    },
                    "preferences": {
                        "properties": {
                            "language": {
                                "type": "string",
                                "enum": [
                                    "en",
                                    "ar"
                                ]
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ClientRegisterRequest": {
                "required": [
                    "first_name",
                    "last_name",
                    "phone_number",
                    "password",
                    "password_confirmation",
                    "first_name_ar",
                    "last_name_ar"
                ],
                "properties": {
                    "first_name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Ahmad"
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "Qassas"
                    },
                    "first_name_ar": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "أحمد"
                    },
                    "last_name_ar": {
                        "type": "string",
                        "maxLength": 255,
                        "example": "قصاص"
                    },
                    "phone_number": {
                        "description": "Syria mobile number starting with +963",
                        "type": "string",
                        "example": "+963944000000"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8,
                        "example": "StrongPass123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "StrongPass123"
                    },
                    "preferences": {
                        "properties": {
                            "language": {
                                "type": "string",
                                "enum": [
                                    "en",
                                    "ar"
                                ],
                                "example": "en"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "required": [
                    "phone_number",
                    "password"
                ],
                "properties": {
                    "phone_number": {
                        "type": "string",
                        "example": "+9639xxxxxxxx"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "your_password"
                    }
                },
                "type": "object"
            },
            "PasswordResetRequest": {
                "required": [
                    "phone_number",
                    "password",
                    "password_confirmation",
                    "reset_token"
                ],
                "properties": {
                    "phone_number": {
                        "type": "string",
                        "example": "+963944000000"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "newSecurePassword123"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "newSecurePassword123"
                    },
                    "reset_token": {
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOi..."
                    }
                },
                "type": "object"
            },
            "PlaceRegisterRequest": {
                "required": [
                    "place_name",
                    "place_name_ar",
                    "place_address",
                    "place_address_ar",
                    "place_latitude",
                    "place_longitude",
                    "place_type",
                    "categories",
                    "res_types"
                ],
                "properties": {
                    "place_name": {
                        "type": "string",
                        "example": "Sky Lounge"
                    },
                    "place_name_ar": {
                        "type": "string",
                        "example": "سكاي لاونج"
                    },
                    "place_address": {
                        "type": "string",
                        "example": "Damascus, Shaalan"
                    },
                    "place_address_ar": {
                        "type": "string",
                        "example": "دمشق، الشعلان"
                    },
                    "place_latitude": {
                        "type": "number",
                        "format": "float",
                        "example": "33.5138"
                    },
                    "place_longitude": {
                        "type": "number",
                        "format": "float",
                        "example": "36.2765"
                    },
                    "place_type": {
                        "type": "string",
                        "enum": [
                            "restaurant",
                            "cafe"
                        ],
                        "example": "restaurant"
                    },
                    "place_reservation_duration": {
                        "type": "integer",
                        "example": 2,
                        "nullable": true
                    },
                    "place_description": {
                        "type": "string",
                        "nullable": true
                    },
                    "place_description_ar": {
                        "type": "string",
                        "nullable": true
                    },
                    "place_phone_number": {
                        "type": "string",
                        "example": "+963944000000",
                        "nullable": true
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    "res_types": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                },
                "type": "object"
            },
            "VerifyRequest": {
                "required": [
                    "phone_number",
                    "verification_code"
                ],
                "properties": {
                    "phone_number": {
                        "type": "string",
                        "example": "+963944000000"
                    },
                    "verification_code": {
                        "type": "string",
                        "example": "ABCD1234"
                    }
                },
                "type": "object"
            },
            "Category": {
                "title": "Category",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Breakfast"
                    }
                },
                "type": "object"
            },
            "Place": {
                "title": "Place",
                "description": "A single place with multilingual fields and relationships",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Al Khan Restaurant"
                    },
                    "address": {
                        "type": "string",
                        "example": "Damascus, Syria - Al Shaalan"
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "+963944XXXXXX",
                        "nullable": true
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "example": 33.5138
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "example": 36.2765
                    },
                    "type": {
                        "type": "string",
                        "example": "restaurant"
                    },
                    "reservation_duration": {
                        "type": "integer",
                        "example": 2
                    },
                    "description": {
                        "type": "string",
                        "example": "A beautiful place to enjoy Syrian cuisine.",
                        "nullable": true
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    },
                    "reservations_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResType"
                        }
                    },
                    "photo_path": {
                        "type": "string",
                        "example": "/storage/places/restaurant.jpg",
                        "nullable": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-20T15:30:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-21T08:10:00Z"
                    }
                },
                "type": "object"
            },
            "ResType": {
                "title": "Reservation Type",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Birthday"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User data. Note: is_active will be false by default until user verifies their account and logs in.",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "type": "string",
                        "example": "first name in english or arabic based on the language in the preferences"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "last name in english or arabic based on the language in the preferences"
                    },
                    "phone_number": {
                        "type": "string",
                        "example": "+9639xxxxxxxx"
                    },
                    "photo": {
                        "type": "string",
                        "example": "https://example.com/images/profile.jpg",
                        "nullable": true
                    },
                    "preferences": {
                        "type": "object",
                        "example": {
                            "language": "en"
                        }
                    },
                    "role": {
                        "type": "string",
                        "example": "manager|employee|client|admin"
                    },
                    "is_active": {
                        "description": "Will be false by default until user verifies account and logs in",
                        "type": "boolean",
                        "default": false,
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-19T10:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-04-19T10:00:00Z"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "Sanctum Token",
                "description": "Enter token in format (Bearer <token>)"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}